#cloud-config

write_files:
- path: "/etc/kubernetes/azure.json"
  permissions: "0644"
  owner: "root"
  encoding: "base64"
  content: |
    {{.Json64}}

- path: "/etc/kubernetes/manifests/master-components.yaml"
  permissions: "0644"
  owner: "root"
  content: |
    {
      "apiVersion": "v1",
      "kind": "Pod",
      "metadata": { "name": "k8s-master" },
      "spec": {
        "hostNetwork": true,
        "containers": [
          {
            "name": "apiserver",
            "image": "{{.Kubernetes.HyperkubeContainerSpec}}",
            "command": [
              "/hyperkube",
              "apiserver",
              "--address=0.0.0.0",
              "--allow-privileged",
              "--insecure-port=8080",
              "--secure-port=6443",
              "--service-cluster-ip-range={{.Network.ServiceCidr}}",
              "--etcd-servers=http://127.0.0.1:4001",
              "--cluster-name=kubernetes",
              "--tls-cert-file=/etc/kubernetes/apiserver.crt",
              "--tls-private-key-file=/etc/kubernetes/apiserver.key",
              "--client-ca-file=/etc/kubernetes/ca.crt",
              "--v=2"
            ],
            "volumeMounts": [ { "name": "etc-kubernetes", "mountPath": "/etc/kubernetes" } ]
          },
          {
            "name": "controller-manager",
            "image": "{{.Kubernetes.HyperkubeContainerSpec}}",
            "command": [
              "/hyperkube",
              "controller-manager",
              "--kubeconfig=/etc/kubernetes/master-controller-manager-kubeconfig",
              "--v=2"
            ],
            "volumeMounts": [ { "name": "etc-kubernetes", "mountPath": "/etc/kubernetes" } ]
          },
          {
            "name": "scheduler",
            "image": "{{.Kubernetes.HyperkubeContainerSpec}}",
            "command": [
              "/hyperkube",
              "scheduler",
              "--kubeconfig=/etc/kubernetes/master-scheduler-kubeconfig",
              "--v=2"
            ],
            "volumeMounts": [ { "name": "etc-kubernetes", "mountPath": "/etc/kubernetes" } ]
          },
          {
            "name": "kube-proxy",
            "image": "{{.Kubernetes.HyperkubeContainerSpec}}",
            "command": [
              "/hyperkube",
              "proxy",
              "--kubeconfig=/etc/kubernetes/master-proxy-kubeconfig",
              "--proxy-mode=iptables",
              "--v=2"
            ],
            "securityContext": {
              "privileged": true
            },
            "volumeMounts": [ { "name": "etc-kubernetes", "mountPath": "/etc/kubernetes" } ]
          }
        ],
        "volumes": [ { "name": "etc-kubernetes", "hostPath": { "path": "/etc/kubernetes" } } ]
      }
    }

coreos:
  etcd2:
    advertise-client-urls: "http://{{.Network.MasterPrivateIp}}:2379"
    listen-client-urls: "http://0.0.0.0:2379,http://0.0.0.0:4001"
  units:
    - name: "etcd2.service"
      command: "start"
    - name: flanneld.service
      drop-ins:
        - name: 50-network-config.conf
          content: |
            [Service]
            ExecStartPre=/usr/bin/etcdctl set /coreos.com/network/config "{ \"Network\": \"{{.Network.PodCidr}}\" }"
      command: "start"
    - name: "docker.service"
      command: "start"
    - name: "kubelet.service"
      command: "start"
      content: |
        [Unit]
        Description=Kubelet
        Requires=docker.service
        Requires=flanneld.service
        Requires=ensure-secrets.service
        After=docker.service
        After=flanneld.service
        After=ensure-secrets.service

        [Service]
        Restart=always
        ExecStart=/usr/bin/docker run \
                    --net=host \
                    --privileged \
                    -v /sys:/sys:ro \
                    -v /var/run:/var/run:rw \
                    -v /:/rootfs:ro \
                    -v /dev:/dev \
                    -v /var/lib/docker/:/var/lib/docker:ro \
                    -v /var/lib/kubelet/:/var/lib/kubelet:rw \
                    -v /etc/kubernetes/:/etc/kubernetes/:rw \
                    {{.Kubernetes.HyperkubeContainerSpec}} \
                      /hyperkube kubelet \
                        --containerized \
                        --api-servers=https://{{.MasterFqdn}}:6443 \
                        --kubeconfig=/etc/kubernetes/master-kubelet-kubeconfig \
                        --address=0.0.0.0 \
                        --allow-privileged=true \
                        --enable-server \
                        --config=/etc/kubernetes/manifests \
                        --cluster-dns={{.Network.DnsServiceIp}}\
                        --cluster-domain=cluster.local \
                        --register-node=false \
                        --v=2
        ExecStop=/usr/bin/docker stop -t 2 kubelet
    - name: "ensure-secrets.service"
      command: "start"
      content: |
        [Unit]
        Description=Load kubeconfig files for the kube components
        Before=kubelet.service
        Requires=flanneld.service
        Requires=docker.service
        After=flanneld.service
        After=docker.service

        [Service]
        Restart=on-failure
        ExecStart=/usr/bin/docker run \
          -v /etc/ssl:/etc/ssl \
          -v /usr/share/ca-certificates:/usr/share/ca-certificates \
          -v /etc/kubernetes:/etc/kubernetes \
          -v /var/lib/waagent:/var/lib/waagent \
          colemickens/azkube /azkube certinstall --machineType=master
