{
	"$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"variables": {
		"azureApiVersion": "2015-05-01-preview",

		"masterVmSize": "{{.MasterVmSize}}",
		"nodeVmSize": "{{.NodeVmSize}}",
		"nodeVmssName": "{{.NodeVmssName}}",
		"nodeVmssInitialCount": "{{.NodeVmssInitialCount}}",
		"username": "{{.Username}}",

		"vaultName": "{{.Vault.Name}}",
		"servicePrincipalSecretUrl": "{{.Vault.SecretPrincipalSecretUrl}}",

		"vmNamePrefix": "kube-",
		"osImagePublisher": "CoreOS",
		"osImageOffer": "CoreOS",
		"osImageSKU": "Beta",

		"nsgName": "nsg",
		"vnetName": "vnet",
		"vnetCidr": "{{.Network.VnetCidr}}",
		"subnetName": "subnet1",
		"subnetCidr": "{{.Network.SubnetCidr}}",
		"vnetRef": "[resourceId('Microsoft.Network/virtualNetworks',variables('vnetName'))]",
		"subnetRef": "[concat(variables('vnetRef'),'/subnets/',variables('subnetName'))]",
		
		"podCidr": "{{.Network.PodCidr}}",
		"serviceCidr": "{{.Network.ServiceCidr}}",

		"masterPrivateIp": "{{.Network.MasterPrivateIp}}",
		"apiServiceIp": "{{.Network.ApiServiceIp}}",
		"dnsServiceIp": "{{.Network.DnsServiceIp}}",

		"storageAccountName": "[replace(concat(resourceGroup().name, 'storage'),'-','')]",
		"storageContainerName": "kube-vm-disks",
		"storageAccountType": "Standard_LRS",
		
		"sshAuthorizedKeysPath": "[concat('/home/{{.Username}}/.ssh/authorized_keys')]",
		"sshPublicKeyData": "{{.SshPublicKeyData}}",
		"masterCloudConfig": "{{.CloudConfig.Master}}",
		"nodeCloudConfig": "{{.CloudConfig.Minion}}"
	},
	"resources": [
		{
			"type": "Microsoft.Storage/storageAccounts",
			"apiVersion": "[variables('azureApiVersion')]",
			"name": "[variables('storageAccountName')]",
			"location": "[resourceGroup().location]",
			"properties": {
				"accountType": "[variables('storageAccountType')]"
			}
		},
		{
			"type": "Microsoft.Network/networkSecurityGroups",
			"apiVersion": "2015-05-01-preview",
			"name": "[variables('nsgName')]",
			"location": "[resourceGroup().location]",
			"properties": {
				"securityRules": [
					{
						"name": "allow_ssh",
						"properties": {
							"description": "Allow SSH traffic to master",
							"protocol": "Tcp",
							"sourcePortRange": "*",
							"destinationPortRange": "22-22",
							"sourceAddressPrefix": "*",
							"destinationAddressPrefix": "*",
							"access": "Allow",
							"priority": 101,
							"direction": "Inbound"
						}
					},
					{
						"name": "allow_kube_tls",
						"properties": {
							"description": "Allow kube-apiserver (tls) traffic to master",
							"protocol": "Tcp",
							"sourcePortRange": "*",
							"destinationPortRange": "6443-6443",
							"sourceAddressPrefix": "*",
							"destinationAddressPrefix": "*",
							"access": "Allow",
							"priority": 100,
							"direction": "Inbound"
						}
					}
				]
			}
		},
		{
			"type": "Microsoft.Network/publicIPAddresses",
			"apiVersion": "[variables('azureApiVersion')]",
			"name": "pip-master",
			"location": "[resourceGroup().location]",
			"properties": {
				"publicIPAllocationMethod": "Dynamic",
				"dnsSettings": {
					"domainNameLabel": "[concat(resourceGroup().name, '-master')]"
				}
			}
		},
		{
			"type": "Microsoft.Network/virtualNetworks",
			"apiVersion": "[variables('azureApiVersion')]",
			"name": "[variables('vnetName')]",
			"location": "[resourceGroup().location]",
			"dependsOn": [
				"[concat('Microsoft.Network/networkSecurityGroups/', variables('nsgName'))]"
			],
			"properties": {
				"addressSpace": {
					"addressPrefixes": [
						"[variables('vnetCidr')]"
					]
				},
				"subnets": [
					{
						"name": "[variables('subnetName')]",
						"properties": {
							"addressPrefix": "[variables('subnetCidr')]",
							"networkSecurityGroup": {
								"id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]"
							}
						}
					}
				]
			}
		},
		{
			"type": "Microsoft.Network/networkInterfaces",
			"apiVersion": "[variables('azureApiVersion')]",
			"name": "nic-master",
			"location": "[resourceGroup().location]",
			"dependsOn": [
				"[concat('Microsoft.Network/publicIPAddresses/', 'pip-master')]",
				"[concat('Microsoft.Network/virtualNetworks/', variables('vnetName'))]"
			],
			"properties": {
				"ipConfigurations": [
					{
						"name": "ipconfig1",
						"properties": {
							"privateIPAllocationMethod": "Dynamic",
							"privateIPAddress": "[variables('masterPrivateIp')]",
							"publicIPAddress": {
								"id": "[resourceId('Microsoft.Network/publicIpAddresses', 'pip-master')]"
							},
							"subnet": {
								"id": "[variables('subnetRef')]"
							}
						}
					}
				]
			}
		},
		{
			"type": "Microsoft.Compute/virtualMachines",
			"apiVersion": "[variables('azureApiVersion')]",
			"name": "[concat(variables('vmNamePrefix'), 'master')]",
			"location": "[resourceGroup().location]",
			"dependsOn": [
				"[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
				"[concat('Microsoft.Network/networkInterfaces/', 'nic-master')]"
			],
			"properties": {
				"hardwareProfile": {
					"vmSize": "[variables('masterVmSize')]"
				},
				"osProfile": {
					"computername": "[concat(variables('vmNamePrefix'), 'master')]",
					"adminUsername": "[variables('adminUsername')]",
					"customData": "[variables('masterCloudConfig')]",
					"secrets": [
						{
							"sourceVault": {
								"id": "[resourceId('Microsoft.KeyVault/vaults', variables('vaultName'))]"
							},
							"vaultCertificates": [
								{
									"certificateUrl": "[variables('servicePrincipalSecretUrl')]"
								}
							]
						}
					],
					"linuxConfiguration": {
						"disablePasswordAuthentication": "true",
						"ssh": {
							"publicKeys": [
								{
									"path": "[variables('sshKeyPath')]",
									"keyData": "[variables('sshPublicKeyData')]"
								}
							]
						}
					}
				},
				"storageProfile": {
					"imageReference": {
						"publisher": "[variables('osImagePublisher')]",
						"offer": "[variables('osImageOffer')]",
						"sku": "[variables('osImageSku')]",
						"version": "latest"
					},
					"osDisk": {
						"name": "[concat(variables('vmNamePrefix'), 'master')]",
						"vhd": {
							"uri": "[concat('http://',variables('storageAccountName'),'.blob.core.windows.net/',variables('storageContainerName'),'/',variables('vmNamePrefix'), 'master.vhd')]"
						},
						"caching": "ReadWrite",
						"createOption": "FromImage"
					}
				},
				"networkProfile": {
					"networkInterfaces": [
						{
							"id": "[resourceId('Microsoft.Network/networkInterfaces','nic-master')]"
						}
					]
				}
			}
		},
		{
			"type": "Microsoft.Compute/virtualMachineScaleSets",
			"apiVersion": "[variables('azureApiVersion')]",
			"name": "[concat(variables('nodeVmssName')]",
			"location": "[resourceGroup().location]",
			"dependsOn": [
				"[concat('Microsoft.Compute/virtualMachines/', variables('vmNamePrefix'), 'master')]",
				"[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
				"[concat('Microsoft.Network/virtualNetworks/', variables('vnetName'))]"
			],
			"sku": {
				"name": "[variables('nodeVmSize')]",
				"tier": "Standard",
				"capacity": "[variables('nodeCount')]"
			},
			"properties": {
				"upgradePolicy": {
					"mode": "Manual"
				},
				"virtualMachineProfile": {
					"osProfile": {
						"computerNamePrefix": "[concat(variables('vmNamePrefix'), 'minion')]",
						"adminUsername": "[variables('username')]",
						"customData": "[variables('nodeCloudConfig')]",
						"secrets": [
							{
								"sourceVault": {
									"id": "[resourceId('Microsoft.KeyVault/vaults', variables('vaultName'))]"
								},
								"vaultCertificates": [
									{
										"certificateUrl": "[variables('servicePrincipalSecretUrl')]"
									}
								]
							}
						],
						"linuxConfiguration": {
							"disablePasswordAuthentication": "true",
							"ssh": {
								"publicKeys": [
									{
										"path": "[variables('sshKeyPath')]",
										"keyData": "[variables('sshPublicKeyData')]"
									}
								]
							}
						}
					},
					"storageProfile": {
						"imageReference": {
							"publisher": "[variables('osImagePublisher')]",
							"offer": "[variables('osImageOffer')]",
							"sku": "[variables('osImageSku')]",
							"version": "latest"
						},
						"osDisk": {
							"name": "[concat(variables('vmNamePrefix'), 'minion-disk')]",
							"vhdContainers": [
								"[concat('http://',variables('storageAccountName'),'.blob.core.windows.net/',variables('storageContainerName'))]"
							],
							"caching": "ReadOnly",
							"createOption": "FromImage"
						}
					},
					"networkProfile": {
						"networkInterfaceConfigurations": [
						{
								"name": "minion-nic",
								"properties": {
									"primary": "true",
									"ipConfigurations": [
										{
											"name": "minion-ip",
											"properties": {
												"subnet": {
													"id": "[concat(resourceId('Microsoft.Network/virtualNetworks/', variables('vnetName')), '/subnets/', variables('subnetName'))]"
												}
											}
										}
									]
								}
							}
						]
					}
				}
			}
		}
	]
}
